IoC(Inversion Of Control):제어 역전
IoC 컨테이너
POJO(Plain Old Java Object) : 단순한 일말 하는 Bean 객체, '오래된' 방식의 '순수한' 자바객체

IoC 컨테이너의 종류
BeanFactory : 클라이언트 요청(lookup)에 의해서만 <bean> 객체가 생성되는 지연로딩(lazy loading) 방식을 사용
              Bean에 관련된 설정을 위한 xml 파일은 즉시 로딩하지만 객체는 개발자가 요구할 때만 생성한다.

XmlBeanFactory

ApplicationContext : 컨테이너가 구동되는 시점에 <bean>에 등록된 클래스들을 객체 생성하는 즉시 로딩(pre-loading>방식으로 동작
                     Bean에 관련된 설정을 위한 xml파일은 즉시 로딩하면서 객체를 미리생성해서 가지고 있다

ClassPathXmlApplicationContext
FileSystemXmlApplicationContext
XmlWebAppliicationContext

스프링 프레임워크는 IoC 컨테이너를 이용해 Bean 객체들을 관리한다.

Spring Bean 객체 생성
Spring 에서는 사용할 Bean 객체를 bean configuration file에 정의를 하고 필요할 때 가져와 사용한다.

bean 태그 : 사용할 Bean을 정의하는 태그

Bean 태그의 기본 속성
class : 객체를 생성하기 위해 사용할 클래스를 지정
id : 객체를 가져오기 위해 사용하는 이름
lazy-init : 싱글톤인 경우 xml을 로딩할 때 객체 생성 여부를 설정한다.
            true : xml 로딩 시 객체를 생성하지 않고 객체를 가져올 때 생성

scope : 객체 범위 설정
    singleton : 객체를 하나만 생성해
    '서 사용
    prototype : 객체를 가져올 때 마다 객체를 생성


06_BeanLifeCycle
Singleton 인 경우 xml 파일을 로딩할 때 객체가 생성
Singleton이고 lazy-init 속성이 true일 경우 getBean 메서드를 사용할 때 객체 생성
prototype일 경우 getBean 메서드를 사용할 때 객체가 생성

IoC 컨테이너 종료 때 객체가 소멸

객체 생성과 소멸시 호출될 메서드
init-method : 생성자 호출 후 자동으로 호출된다
destroy-method : 객체가 소멸될 때 자동으로 호출된다
default-init-method : init method 를 설정하지 않은 경우 자동으로 호출된다
default-destroy-method : destroy-method 를 설정하지 않은 경우 자동으로 호출된다.

메서드가 없을 경우
init-method :  오류 발생
destroy-method :  오류 발생
default-init-method : 아무일도 발생하지 않는다.
default-destroy-method : 아무일도 발생하지 않는다.

07_BeanPostProcessor
Bean 객체를 정의할 때 init-method 속성을 설정하면 객체가 생성될 때 자동으로 호출될 메서드를 지정할 수 있다.
이 때 BeanPostProcessor 인터페이스를 구현한 클래스를 정의하면 Bean객체를 생성할 때 init 메서드 호출을 가로채 다른 메서드를 호출할 수 있다.

postProcessBeforeInitialization : init-method에 지정된 메서드가 호출되기 전에 호출된다.
postProcessAfterInitialization: init-method에 지정된 메서드가 호출된 후에 호출된다.
init-method가 생략되어도 자동으로 호출

Spring에서는 객체가 생성될 떄 init-method로 지정된 메서드가 호출되기 전, 후에 다른 메서드를 호출할 수 있다.

08_ConstructorDI
의존성 주입(Dependency Injection)
의존성 주입은 Spring에서 중요한 개념
Bean객체를 생성할 때 Bean객체가 관리할 값이나 객체를 주입하는것을 의미
Bean객체 생성 후 Bean 객체가 가질 기본값을 자바 코드로 설정하는 것이 아닌
Bean을 정의하는 xml코드에서 정의하는 개념
Bean을 정의할 때 constructor-arg 태그를 이용해 주입하게 되면 생성자를 통해
주입할 수 있다.

value : 기본 자료형 값과 문자열 값을 설정한다.
ref : 객체를 설정한다.
type : 저장 할 값의 타입을 설정한다.
index : 지정된 값을 주입할 생성자의 매개변수 인덱스 번호

Bean 객체를 생성할 때 객체의 기본 값을 생성자를 통해 주입할 수 있다.

09_SetterDI
Setter 메서드를 통한 주입
Bean을 정의할 때 Bean 객체가 가지고 있을 기본값을 생성자가 아닌 Setter 메서드를 통해 주입할 수 있다.

name : 데이터를 주입할 프로퍼티 이름
value : 기본 자료형 및 문자열을 주입할 때 사용하는 속성
ref : 객체의 주소  값을 주입할 때 사용하는 속성

Bean 객체를 생성할 때 주입할 멤버가 컬렉션이라면 컬렉션이 관리할 객체를 주입할 수 있다.

kr.co.ezenac
11_AutoWire

Bean을 정의할 떄 주입할 객체는 생성자를 통한 주입이나 setter를 통한 주입을 사용했다.
Spring에서는 객체를 주입할 때 자동으로 주입될 수 있도록 설정할 수 있다.
자동 주입은 이름, 타입, 생성자를 통해 할 수 있으며 auto wire라는 용어로 부른다.
byName : 빈 객체의 프로퍼티 이름과 정의된 빈의 이름이 같은 것을 찾아 자동으로 주입한다.
byType : 빈 객체의 프로퍼티 타입과 정의된 빈의 타입이 일치할 경우 주입된다. 이때 동일 타입의 빈이 두 개 이상 정의되어 있으면 오류 발생
constructor : 생성자의 매개 변수 타입과 정의된 빈의 타입이 일치할 경우 주입된다.